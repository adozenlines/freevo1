#!/bin/bash
#
# boot script for the Freevo record server
#
### BEGIN INIT INFO
# Provides:       freevo_record
# Required-Start: $network $remote_fs
# Required-Stop:
# Default-Start:  3 5
# Default-Stop:
# Description:    Start the Freevo record server
### END INIT INFO

# Check Configuration
test -f /etc/freevo/local_conf.py || exit 6

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin
FREEVO_BIN="/usr/bin/freevo"
PYTHON_BIN="/usr/bin/python2.3"
NAME="Freevo record server"
PIDFILE="/var/run/freevo_record.pid"
LOGFILE="/var/log/freevo_record.log"

test -f $FREEVO_BIN || exit 5

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num><num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
. /etc/rc.status

# First reset status of this service
rc_reset

case "$1" in
  start)
    echo -n "Starting $NAME"
    startproc -l $LOGFILE -p $PIDFILE $FREEVO_BIN recordserver start
    rc_status -v
    ;;
  stop)
    echo -n "Stopping $NAME"
    killproc -G -p $PIDFILE $PYTHON_BIN
    rc_status -v
    ;;
  status)
    checkproc -p $PIDFILE $PYTHON_BIN
    rc_status -v
    ;;
  restart)
    $0 stop
    sleep 3
    $0 start
    rc_status
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}" >&2
    exit 1
    ;;
esac

exit 0
