rec_favorites.py
----------------

This module is the interface between programs and the favorites that are saved
in the ScheduledRecordings object.  It may be merged into rec_interface.py in
the future.


def addFavorite(name, prog, exactchan=FALSE, exactdow=FALSE, exacttod=FALSE):

    This function is used to create a Favorite object by using all of the
    default constructor arguments.  name will be used as the key for
    this favorite in the dictionary, prog is a TvProgram to base the
    favorite of off, and exactchan, exactdow, exacttod are all TRUE or
    FALSE and are used by the Favorite constructor to set its channel_id,
    dow, and mod.  It will then add the favorite to the ScheduledRecordings
    object and call addFavoriteToSchedule to schedule future recordings.

    This function creates a favorite based on the sort of information that
    edit_favorite.cgi gets from guide.cgi.

    Returns: nothing


def addEditedFavorite(name, title, chan, dow, mod, priority):

    This function creates a favorite and calls addFavoriteToSchedule much like
    addFavorite does however its arguments are tailored to the properties of
    the Favorite object rather than basing their values off of a TvProgram
    (like Favorite's default constructor does).  It also adds the favorite to
    the ScheduledRecordings object.

    Returns: nothing


def removeFavorite(name=None):

    This function takes in a string which is the name of a favorite and removes
    the matching favorite from the ScheduledRecordings object.  It also calls
    removeFavoriteFromSchedule to unschedule matching recordings.

    Returns: nothing


def clearFavorites():

    This function calls clearFavorites() on the ScheduledRecordings object.

    Returns: nothing


def getFavorites():

    This function will return the favorites dictionary from the 
    ScheduledRecordings object.

    Returns: a dictionary of the current favorites


def getFavorite(name):

    This function takes in a string and returns the favorite whose name matches
    that string from the current favorites.

    Returns: None or Favorite


def adjustPriority(favname, mod=0):

    This function takes in the name of a favorite and an integer used to modify
    the priority of the matching favorite over the other current favorites.

    Returns: nothing


def isProgAFavorite(prog, favs=None):

    This function takes in a TvProgram and a dictionary of favorites.  If prog
    matches any of the favorites it will return TRUE (1), otherwise FALSE (0).
    If the favorites are not passed to this function it will load the current
    favorites.  Note that if you are calling this function while you are
    looping through multiple TvProgram's it will be more efficient to load
    the current favorites before the loop and passing them to this function
    every time it is called inside that loop.

    Returns: TRUE or FALSE


def removeFavoriteFromSchedule(fav):

    This function takes in a Favorite and will remove any scheduled recordings
    from the ScheduledRecordings object that match.

    Returns: nothing


def addFavoriteToSchedule(fav):

    This function takes in a Favorite and then looks into the current program
    guide, adding and matching TvProgram's to the ScheduledRecordings object.

    Returns: nothing


def updateFavoritesSchedule():

    This function is intended to be called whenever the program guide is
    updated.  It will first remove any scheduled recordings that are favorites
    (within the new guide timeframe) then add any TvProgram that matches a
    favorite back to the scheduled recordings.  This is done in case any
    programs that are favorites have a schedule change.  It also ensures that
    TvProgram's that are favorites are added to the recording schedule.

    Returns: nothing


def main():

    If this module is run from the comand line it will call 
    updateFavoritesSchedule().


