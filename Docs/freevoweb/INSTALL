Some quick install notes:
-------------------------

First off, the use of Mozilla 1.2.1+ or Netscape 7+ is required until someone gets this working under other browsers, or if anyone cares. :)  Please occasionally chack http://ettin.danicar.net/freevodemo/index.html for updates in features and the to-do list.  I sometimes refer to this interface as freevoweb but I would like to come up with a new one!

The www directory should be placed under the top-level freevo directoy, for me this is /opt/freevo.  Technichally this could be anywhere as long as your PYTHONPATH environment variable is set accordingly.

Because the web interface imports other freevo modules there are a few things that have to be done.  In config.py, DEBUG_STDOUT should be set to 0.  The only stuff we want to goto stdout is web stuff, everything less will be logged.  Config also looks for some other things, in pretty specific spots, these are your freevo_config.py and the rc_client directory.  For freevo_config.py I made a symbolik link from /etc/freevo/freevo_config.py to my local_conf.py.  As for rc_client, freevo looks for that as './rc_client' so i made a symbolic link inside 'www' pointing to '../rc_client'.

KNOWN PROBLEM: src/config.py now looks for freevo_config.py as './freevo_config.py'.  I had to change it to /etc/freevo/freevo_config.py for the meantime to get it to work.  I will talk to some people about this but I think it should look for FREEVO_STARTDIR/freevo_config.py instead.

The CGIs look for python as /usr/bin/python, this could probably be changed to 'env python' or something but I haven't tried that yet.

Right now the web server must be on the same machine as freevo unless you have some type of NFS setup to share directories.  I won't get into that here.  I am thinking about putting an RPC layer between the rec_interface and a server to get/save the scheduled recordings.  That way it doesn't matter what machine your web server is on.  The same thing would have to be done for the tv listings.

Your web server must be configured to run CGIs, nothing special for python.

In my setup all I have for this in my httpd.conf file are an Alias and Direcory directives.  Please change /opt/freevo to where you have freevo installed:

Alias /freevoweb/ /opt/freevo/src/www/htdocs/
<Directory /opt/freevo/src/www/htdocs/>
    Options ExecCGI
    AllowOverride All
    Order allow,deny
    Allow from all
    SetEnv FREEVO_STARTDIR "/opt/freevo"
    SetEnv PYTHONPATH "/opt/freevo/runtime/lib/python2.2/site-packages:/opt/freevo/runtime/lib/python2.2:/opt/freevo/src:/opt/freevo/src/tv:/opt/freevo/src/www"
</Directory>

Make sure PYTHONPATH is set according to your freevo runtime and freevo installations.

Because the web interface is run by your web server, it needs to have permission to write to some freevo directories.  I changed the group of /tmp/freevo, /var/log/freevo and /opt/freevo/src/www on my system to www-date (the group my web server user is in) and made those places group-writable (recursively).  Until i make a fix, you may have to chmod g+w and chgrp www-data(or whatever) your rec_schedule.pickled if your cron job (if run as root) writes it first.

If you have a cron job to run epg_xmltv.py in order to generate your tv.xml.pickled, be sure to copy the resulting file to one owned by your web server user or the first time you visit it after an update, you will be waiting a while.  My web server's uid is 33 to my schedule is tv.xml-33.pickled.

A couple things need to be added to your local_conf.py:
REC_SCHEDULE = '/opt/freevo/src/www/rec_schedule.pickled'
REC_CMD = '/opt/freevo/src/www/bin/tvrecord'
You should set these according to your system.

If you have 'favorites' you need to run rec_favorites.py after you update your freevo program guide.  I do this with a line like:

su -c "cd /opt/freevo/src/www; . bin/ENV; nice -n 19 python rec_favorites.py" www-data

I have included my updateListing script which fetches my tv listings and updates my guide and favorites, feel free to modify it for your own use.

tvrecord is a script that I made, as arguments it takes: channel, time to record, filename.  rec_interface.py uses this format to start a recording job.  Right now tvrecord is a stupid script that does nothing! :)  I will be altering it to create pid files for the recording job and to use different recording commands or settings (mencoder, divx4rec, ffmpeg, etc).  Right now it uses mencoder but you very well might want to change it to use some other program... it does not matter as long as you can handle the arguments that are passed into that script.

Also, web.py has some configuration items which I should make part of the freevo config sometime.

In your crontab you should have something like:
* * * * *       /opt/freevo/src/www/bin/cron_one_minute.sh
Every minute this should be run in order to see if something needs to be recorded.  It gets its environment from the ENV file so be sure to update that as well.

BTW, if your web server can be accessed from the outside world do not forget to password protect this interface!
