rec_interface.py:
-----------------

This module is the main interface between other programs and the 
ScheduledRecordings object that is pickled to disk.  It also contains some
useful utility functions.  If this module is run from the command line then
it will call the checkToRecord() function and start recording a program
if neccessary.  rec_favorites.py may be merged into this file.


def getScheduledRecordings():

    This function will load a ScheduledRecordings from disk if one is available
    or create an empty one if not.

    Returns: a ScheduledRecordings object


def saveScheduledRecordings(scheduledRecordings):

    This function takes in a ScheduledRecordings object and pickles it to
    disk, overwriting what is there.

    Returns: nothing


def getKey(prog=None):

    This function takes in a TvProgram object and returns a string intended
    to be a unique key for recording the program.

    Returns: a string in the format of 'TvProgram.channel_id:TvProgram.start'


def progRunning(prog=None):

    This function takes in a TvProgram and returns TRUE (1) if the program is
    currently running on TV or FALSE (0) if it is not.

    Returns: TRUE or FALSE


def minToTOD(min):

    This function takes in an integer representing the 'minute of the day',
    minutes counting from 12:00 AM, and converts it to a pleasant string
    from '12:00 AM' to '11:59 PM'.

    Returns: a string representing the time of day


def scheduleRecording(prog=None):

    This function takes in a TvProgram and will add it to the current recording
    schedule.  The program will not be added if it is over.
    
    Returns: nothing


def removeScheduledRecording(prog=None):

    This function takes in a TvProgram and will remove it from the current
    recording schedule.

    Returns: nothing


def cleanScheduledRecordings():

    This function will remove any TvProgram's from the current recording
    schedule if they are over.

    Returns: nothing


def isProgScheduled(prog, schedule=None):

    This function takes in a TvProgram and a programList dictionary.  If the
    dictionary is not passed then the current recording schedule is loaded.
    If this program is in the schedule it returns TRUE (1) or else it will
    return FALSE (0).

    Returns: TRUE or FALSE


def findProg(chan=None, start=None):

    This function takes in a TvProgram.channel_id and TvProgram.start.  It
    then looks in the program guide and returns the matching TvProgram.

    Returns: TvProgram


def findMatches(find=None):

    This function takes in a string then searches the program guide for any
    programs whose title or description contains that substring.

    Returns: a list of TvProgram objects


def checkToRecord():

    This function is intended to be called every minute.  It gets the scheduled
    recordings and if something should be recorded it will return a command
    to spawn that includes the channel to record on, how many seconds to 
    record for, and a title containing the title and time of the show.

    Returns: None or a string containing a recording command.


def main():

    Calls checkToRecord() and cleanScheduledRecordings().  If there was
    something to record it calls the recording command using os.system().
    This will most likely be changed to use ChildApp for better control.


