Installation instructions for Freevo
------------------------------------

$Id$


Quickstart
----------
o Download freevo and freevo-runtime from the website.
o Un-tar somewhere. /usr/local is the recommended place for a regular
  installation, but it will run from anywhere, e.g. /tmp
     cd tmp
     tar xvzf freevo-1.3.0.tar.gz
     tar xvzf freevo_runtime3.tar.gz
     tar xvzf freevo_apps1.tar.gz
     cd freevo
o Run configure in the Freevo directory. This will create freevo.conf
  which contains settings for your system such as screen size, video devices,
  etc. The default configuration is screensize 800x600, NTSC video input/output.
  You can skip this step to begin with if that is OK.
     ./configure --help
o Make a copy of freevo_config.py to local_conf.py. Update local_conf.py
  to suit your system (optional). The settings that are in local_conf.py 
  will override freevo_config.py.
o If you downloaded a full release you will not need to compile anything.
  If you checked out a CVS version you will need to compile runapp and 
  freevo_xwin:
     make
o Run Freevo:
     ./freevo
o Install MPlayer to play music, movies and view TV: www.mplayerhq.hu
o Install Freevo in /usr/local/freevo:
  make install
  (Do not forget to place the runtime in /usr/local/freevo_runtime3!)


Detailed instructions
---------------------

Some of these steps are optional.

o Recompile the Linux kernel (>=2.4.13). It is assumed that all options 
  are compiled in statically. If they're compiled as modules instead you
  have to make sure that they're loaded before Freevo.
  o This step is not needed until you need the Video4Linux and/or TV-out,
    or if your current kernel already has support.

o Compile and install the needed external apps. MPlayer is required for
  most functions, the others can be installed as needed.
  o Install MPlayer (Play movies, DVDs, VideoCDs, music, watch TV)
    o Test with the the graphics driver and settings you intend to use.
      Update freevo_config.py, settings called MPLAYER_XXXX
  o Install NVrec (record from Video4Linux video in to file)
    o Test recording to a file
    o NVrec support is currently not enabled in Freevo, it is work
      in progress.
  o Install lirc  (remote control receiver software)
    o Test:
      o Insert the serial driver module
      o Start the daemon
      o Run the lirc app "irw" to check the function of the remote 
        control.

o Compile Freevo
  o ./configure [options] ; make
    o Use "./configure --help" for more information

  o It is *strongly* recommended that you use the freevo-runtime that 
    contains *all* external dependencies except MPlayer. Instructions on 
    how to download and install all the dependencies is in the file 
    INSTALL.deps.

  o Test the remote using the lirc application irw, and using the 
    remote_control_lirc.py Freevo application (optional)

o Update the settings in freevo_config.py!
  o TV_CHANNELS depending on where you live.
  o DIR_AUDIO, DIR_MOVIES, DIR_IMAGES for where your files are

o XMLTV method for download TV listings
  o See Docs/XMLTV for usage instructions

o Test Freevo using X11 or the framebuffer mode.

o Create a boot-script that will start Freevo when Linux is booting. (optional)
  boot/freevo is a good start.
  o Make sure that X11 doesn't start up by changing the default 
    runlevel in /etc/inittab to 3
  o boot/freevo needs to have boot/boot_config placed in /etc/freevo
  o boot/freevo_dep contains code to load lirc, mga_vid, etc. This must
    be done before freevo is started, but can be done in other ways than
    using the freevo_dep script.


Kernel configuration
--------------------

Use this for configuration of a kernel with Video4Linux+G400 support. You
probably have to add support for your particular Video4Linux device as 
well.

--- KERNEL CONFIG ---
Multimedia devices --->
  [Y] Video For Linux
  Video For Linux --->
    [Y] V4L information in proc filesystem

Console drivers --->
  [Y] VGA text console
  [Y/M] MDA text console (dual-headed)
  Frame-buffer support --->
    [Y] Support for frame buffer devices
        [Y/M] Matrox acceleration
           [Y] Millenium I/II support   
           [Y] Mystique support
           [Y] G100/G200/G400/G450/G550 support
               [Y/M] Matrox I2C support
               [Y/M] G400 second head support
           [Y] Multihead support
--- KERNEL CONFIG ---

