--- src/video/directfb/SDL_DirectFB_video.orig.c	2003-04-16 21:05:50.000000000 +0300
+++ src/video/directfb/SDL_DirectFB_video.c	2003-04-16 21:21:06.000000000 +0300
@@ -387,7 +387,25 @@
       goto error;
     }
 
+#if 0
   ret = dfb->GetDisplayLayer (dfb, DLID_PRIMARY, &layer);
+#else
+  ret = dfb->GetDisplayLayer (dfb, 2, &layer);
+  if (ret == DFB_OK) {
+
+   DFBDisplayLayerConfig dlc;
+   DFBResult ret2;
+
+   layer->SetCooperativeLevel(layer, DLSCL_EXCLUSIVE);
+
+    dlc.flags = DLCONF_PIXELFORMAT;
+    dlc.pixelformat = DSPF_RGB32;
+	fprintf(stderr, "setting pixelformat to %x\n", dlc.pixelformat);
+    ret2 = layer->SetConfiguration(layer, &dlc);
+    if (ret2 != DFB_OK)
+      DirectFBError ("gdk_windowing_init_check: SetConfiguration",ret2);
+  }
+#endif
   if (ret)
     {
       SetDirectFBerror ("dfb->GetDisplayLayer", ret);
@@ -511,6 +529,7 @@
 	}
     }
 
+#if 0
   /* Set cooperative level depending on flag SDL_FULLSCREEN */
   if (flags & SDL_FULLSCREEN)
     {
@@ -557,11 +576,23 @@
   if (ret)
     {
       SetDirectFBerror ("dfb->CreateSurface", ret);
+#else
+/*  HIDDEN->layer->SetCooperativeLevel(HIDDEN->layer, DLSCL_SHARED); */
+  ret = HIDDEN->layer->GetSurface (HIDDEN->layer, &surface);
+  if (ret)
+    {
+      SetDirectFBerror ("dfb->GetSurface", ret);
       return NULL;
     }
+#endif
 
+#if 0
   current->w     = width;
   current->h     = height;
+#else
+  HIDDEN->layer->SetOpacity(HIDDEN->layer, 0xff);
+  surface->GetSize(surface, &current->w, &current->h);
+#endif
   current->flags = SDL_HWSURFACE | SDL_PREALLOC;
 
   if (flags & SDL_FULLSCREEN)
@@ -808,8 +839,10 @@
     }
 
   if (region_valid)
+{
     surface->Flip (surface, &region, DSFLIP_WAITFORSYNC);
 }
+}
 
 int DirectFB_SetColors(_THIS, int firstcolor, int ncolors, SDL_Color *colors)
 {
