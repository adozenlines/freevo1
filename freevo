#!/bin/sh

# freevo - the main entry point to the whole suite of applications
#
# $Id$
#

# Is runapp present? If not it needs to be compiled
if ! test -a runapp ; then
    echo ./runapp not found! You must compile freevo, see the INSTALL file.
    exit
fi

# Required runtime version
RUNTIME_VERSION=3

# The runtime is stored in a directory one level up
RT_DIR=../freevo_runtime$RUNTIME_VERSION


# First check if the runtime is installed
if test -a $RT_DIR/freevo_python ; then
    
    # Double-check that we have the correct runtime version
    rt_ver=`cat $RT_DIR/VERSION`
    if [[ "$rt_ver" != "$RUNTIME_VERSION" ]] ; then
        echo Runtime version $rt_ver found, but version $RUNTIME_VERSION is required!
        echo Please install the required version in $RT_DIR/
        exit 1
    fi

    # Setup the Python environment variables
    export PYTHONHOME=$RT_DIR
    
    # Prevent the linker from using other libraries than the ones
    # in freevo_runtime
    export LD_PRELOAD=`cat $RT_DIR/preloads`

    # Support for using just Python
    if [[ $1 = prompt ]] ; then
        $RT_DIR/freevo_python 
        exit 0
    fi
    
    # Support executing a standalone Python application, e.g. epg_xmltv.py
    # Usage: freevo execute appname.py arg1 arg2...
    if [[ $1 = execute ]] ; then
        export PYTHONPATH=./src
        $RT_DIR/freevo_python $2 $3 $4 $5 $6 $7 $8 $9
        exit 0
    fi
    
    # Start the lirc remote control app if the device is present
    if test -S /dev/lircd ; then
        echo Found a lirc device, starting the remote control daemon
        $RT_DIR/freevo_python rc_client/remote.py --remote=lirc &> /dev/null &
    fi

    # Execute using the runtime:
    echo "Using the Freevo runtime ($RT_DIR)"
    
    # XXX Uncomment the command below to enable joystick input. 
    # XXX It has not been tested! Please send in testreports!
    # If JOY_DEV is 0 then joy.py just exits.
    #$RT_DIR/freevo_python rc_client/joy.py &> /dev/null &

    # Start the main freevo application
    $RT_DIR/freevo_python src/main.py $*

    # Freevo exited, make sure all children are killed
    sleep 1
    killall -9 freevo_python &> /dev/null
    killall -9 freevo_xwin &> /dev/null
    #killall -9 mplayer &> /dev/null
    exit 0

fi

echo
echo
echo
echo No runtime found!
echo 
echo If Freevo does not work for you, download the runtime from 
echo the website, http://freevo.sourceforge.net
echo
echo Starting using the regular environment.
echo
echo

# Start the lirc remote control app if the device is present
if test -S /dev/lircd ; then
    echo Found a lirc device, starting the remote control daemon
    python rc_client/remote.py --remote=lirc &> /dev/null &
fi

# XXX Uncomment the command below to enable joystick input. 
# XXX It has not been tested! Please send in testreports!
# If JOY_DEV is 0 then joy.py just exits.
# python rc_client/joy.py &> /dev/null &

# Start the main freevo application
python src/main.py $*

# Freevo exited, make sure all children are killed
sleep 1
kill -9 `pgrep -f "python src/main.py" -d" "` &> /dev/null
kill -9 `pgrep -f "python rc_client" -d" "` &> /dev/null
killall -9 freevo_xwin &> /dev/null
#killall -9 mplayer &> /dev/null

exit 0
