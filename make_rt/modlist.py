import os, sys, time

DEBUG = 0

ignore = ['site', 'user', 'FCNTL', 'TERMIOS', 'posixfile', 'regsub', 'this',
          'knee', 'tzparse', 'PIL']

def testmodule(modname):
    if modname in ignore:
        return 0

    try:
        exec('import %s' % modname)
        return 1
    except:
        return 0



def scandir(sysmods, dirname, fnames):

    if DEBUG: print 'scandir %s' % dirname

    
    # Is <dirname> the name of the module?
    if '__init__.py' in fnames:
        if DEBUG: print '  Found __init__.py in dir,',
        
        modname = os.path.basename(dirname)
        if testmodule(modname):
            if DEBUG: print 'is a module, skipping subdirs'
            sysmods += [modname]
            fnames = []  # Don't look in the subdirs
            return
        else:
            if DEBUG: print 'not a module'

    for fname in fnames:
        if DEBUG: print '  fname %s' % fname
        
        if fname[0:2] == '__':
            continue

        if (os.path.join(dirname + fname) and
            os.path.splitext(fname)[1] == '.py'):
            modname = os.path.splitext(os.path.basename(fname))[0]

            if DEBUG: print 'Testing %s,' % modname,
            if testmodule(modname):
                sysmods += [modname]
                if DEBUG: print 'pass'
            else:
                if DEBUG: print 'fail'

                
                
if __name__ == '__main__':

    if len(sys.argv) != 2:
        print 'Usage: %s <sysdirpath>' % sys.argv[0]
        sys.exit[1]
        
    sysdir = sys.argv[1]

    print 'Scanning %s for system modules' % sysdir
    
    sysmods = []
    os.path.walk(sysdir, scandir, sysmods)

    sysmods.sort()

    # Init the generated file with a header
    fd = open('sysmodules.py', 'w')
    fd.write('# Automatically generated by %s on %s\n\n' %
             (sys.argv[0], time.ctime()))
    fd.close()
    
    # Double check all modules, some do not fail the test above!
    for sysmod in sysmods:
        # This will append the import statement to sysmodules.py at success
        os.system('python modtest.py %s' % sysmod)

